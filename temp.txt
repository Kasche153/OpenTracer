https://eth-mainnet.g.alchemy.com/v2/x44Zy65ZCU-4dzsslhp_3Fz6kz49k_yG
https://eth-mainnet.g.alchemy.com/v2/yKflgYl9tHO-Ulkrs8e7k4NpnHXrGuyx
total transactions:  31
https://eth-mainnet.g.alchemy.com/v2/F_L3iReDhsY5H09pmaixMwQEo505n9Nh
https://eth-mainnet.g.alchemy.com/v2/YCP7UuLZXCoGuDr9cXWtNpD_VHATf5QF
total transactions:  31
now we arrive at the function call transfer, ii = 15129
now we arrive at the function call transfer, ii = 23926
now we arrive at the function call transfer, ii = 16520
now we arrive at the function call transfer, ii = 25317
now we arrive at the function call transfer, ii = 18565
now we arrive at the function call transfer, ii = 20848
no access for tx:  0x8c7cc6ab0a5ed76098152927c52a7f3d3ded6f95783fbd13e05b174574bb2763
=====================================================
=============== Access Control ======================
=====================================================
func initialize0xcc2a9a5b has only 1 sender
func initialize0xcc2a9a5b has only 1 origin
func invest0xE8B5E51F has more than 5 origins
func withdrawTo0xC86283C8 has only 1 sender
func withdrawTo0xC86283C8 has only 1 origin
==invariant map: 
{ 'initialize0xCC2A9A5B': { 'isOriginManager': [ '0x3aa27ab297a3a753f79c5497569ba2dacc2bc35a',
                                                 '0x1d5a56402425c1099497c1ad715a6b56aaccb72b'],
                            'isSenderManager': [ '0x00000000b2ff98680adaf8a3e382176bbfc34c8f',
                                                 '0x1695ce70da4521cb94dea036e6ebcf1e8a073ee6'],
                            'require(origin==sender)': False},
  'initialize0xcc2a9a5b': { 'isOriginOwner': '0xe36cc0432619247ab12f1cdd19bb3e7a24a7f47c',
                            'isSenderOwner': '0xe36cc0432619247ab12f1cdd19bb3e7a24a7f47c',
                            'require(origin==sender)': True},
  'invest0xE8B5E51F': { 'isSenderManager': [ '0x0a548513693a09135604e78b8a8fe3bb801586e6',
                                             '0x00000000b2ff98680adaf8a3e382176bbfc34c8f',
                                             '0x1695ce70da4521cb94dea036e6ebcf1e8a073ee6'],
                        'require(origin==sender)': False},
  'withdrawTo0xC86283C8': { 'isOriginOwner': '0xe36cc0432619247ab12f1cdd19bb3e7a24a7f47c',
                            'isSenderOwner': '0x0a548513693a09135604e78b8a8fe3bb801586e6',
                            'require(origin==sender)': False},
  'withdrawToForge0x7B9967A5': { 'isOriginManager': [ '0x3aa27ab297a3a753f79c5497569ba2dacc2bc35a',
                                                      '0x1d5a56402425c1099497c1ad715a6b56aaccb72b'],
                                 'isSenderManager': [ '0x00000000b2ff98680adaf8a3e382176bbfc34c8f',
                                                      '0x1695ce70da4521cb94dea036e6ebcf1e8a073ee6'],
                                 'require(origin==sender)': False}}
Interpretation of the above invariant map: 
For the function initialize0xcc2a9a5b:
	is the invariant require(origin==sender) satisfied? True
	is the invariant isSenderOwner satisfied? 0xe36cc0432619247ab12f1cdd19bb3e7a24a7f47c
	is the invariant isOriginOwner satisfied? 0xe36cc0432619247ab12f1cdd19bb3e7a24a7f47c
For the function invest0xE8B5E51F:
	is the invariant require(origin==sender) satisfied? False
	the invariant isSenderManager has parameters ['0x0a548513693a09135604e78b8a8fe3bb801586e6', '0x00000000b2ff98680adaf8a3e382176bbfc34c8f', '0x1695ce70da4521cb94dea036e6ebcf1e8a073ee6']
For the function withdrawTo0xC86283C8:
	is the invariant require(origin==sender) satisfied? False
	is the invariant isSenderOwner satisfied? 0x0a548513693a09135604e78b8a8fe3bb801586e6
	is the invariant isOriginOwner satisfied? 0xe36cc0432619247ab12f1cdd19bb3e7a24a7f47c
For the function initialize0xCC2A9A5B:
	is the invariant require(origin==sender) satisfied? False
	the invariant isSenderManager has parameters ['0x00000000b2ff98680adaf8a3e382176bbfc34c8f', '0x1695ce70da4521cb94dea036e6ebcf1e8a073ee6']
	the invariant isOriginManager has parameters ['0x3aa27ab297a3a753f79c5497569ba2dacc2bc35a', '0x1d5a56402425c1099497c1ad715a6b56aaccb72b']
For the function withdrawToForge0x7B9967A5:
	is the invariant require(origin==sender) satisfied? False
	the invariant isSenderManager has parameters ['0x00000000b2ff98680adaf8a3e382176bbfc34c8f', '0x1695ce70da4521cb94dea036e6ebcf1e8a073ee6']
	the invariant isOriginManager has parameters ['0x3aa27ab297a3a753f79c5497569ba2dacc2bc35a', '0x1d5a56402425c1099497c1ad715a6b56aaccb72b']
=====================================================
=================== Time Locks ======================
=====================================================
==invariant map: 
{'checkSameOriginBlock': False, 'checkSameSenderBlock': False}
Interpretation of the above invariant map: 
is the invariant checkSameSenderBlock satisfied? False
is the invariant checkSameOriginBlock satisfied? False
=====================================================
=================== Gas Control =====================
=====================================================
==invariant map: 
{ 'initialize0xCC2A9A5B': { 'require(gasStart - gasEnd <= constant)': 43210,
                            'require(gasStart <= constant)': 1441473},
  'initialize0xcc2a9a5b': {},
  'invest0xE8B5E51F': { 'require(gasStart - gasEnd <= constant)': 212948,
                        'require(gasStart <= constant)': 1420539},
  'withdrawTo0xC86283C8': { 'require(gasStart - gasEnd <= constant)': 186329,
                            'require(gasStart <= constant)': 379406},
  'withdrawToForge0x7B9967A5': { 'require(gasStart - gasEnd <= constant)': 129411,
                                 'require(gasStart <= constant)': 1273876}}
Interpretation of the above invariant map: 
	function invest0xE8B5E51F requires gasStart <= 1420539
	function invest0xE8B5E51F requires gasStart - gasEnd <= 212948
	function withdrawTo0xC86283C8 requires gasStart <= 379406
	function withdrawTo0xC86283C8 requires gasStart - gasEnd <= 186329
	function initialize0xCC2A9A5B requires gasStart <= 1441473
	function initialize0xCC2A9A5B requires gasStart - gasEnd <= 43210
	function withdrawToForge0x7B9967A5 requires gasStart <= 1273876
	function withdrawToForge0x7B9967A5 requires gasStart - gasEnd <= 129411
=====================================================
=================== Re-entrancy =====================
=====================================================
==invariant list: 
{'NonReentrantLocks': True}
Interpretation of the above invariant map: 
re-entrancy guard can be applied
=====================================================
================ Special Storage ====================
=====================================================
==invariant map: 
{}
=====================================================
=================== DataFlow ========================
=====================================================
==invariant map: 
{ 'callvalue': {},
  'dataFlow': { 'withdrawTo_withdraw': { 1972: [ { 'Selector': '0x70a08231',
                                                   'addr': '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',
                                                   'gas': '0x3370a',
                                                   'inputTypes': ['address'],
                                                   'inputs': ['ADDRESS'],
                                                   'name': 'balanceOf',
                                                   'outputTypes': ['uint256'],
                                                   'outputs': [9900],
                                                   'pc': 1972,
                                                   'structLogsEnd': 14701,
                                                   'structLogsStart': 14460},
                                                 (90, 9900)]}},
  'mapping': {}}
Interpretation of the above invariant map: 
For the invariant mapping:
For the invariant callvalue:
For the invariant dataFlow:
	It can be applied to function withdrawTo_withdraw:
		For Data Source read from pc = 1972
			with lowerbound = 90
			with upperbound = 9900
=====================================================
=================== MoneyFlow =======================
=====================================================
==invariant map: 
{'withdrawTo+withdraw': {'transferAmount': (90, 9900)}}
Interpretation of the above invariant map: 
For the invariant moneyFlow:
	It can be applied to function withdrawTo+withdraw:
	 with lowerbound of transferAmount = 90
	 with upperbound of transferAmount = 9900
